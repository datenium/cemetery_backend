version: "3.7"
services:
  cemetery-backend:
    container_name: "cemetery-backend"
    hostname: "cemetery-backend"
    restart: "always"
    env_file:
      - .env.production
    build: "npm run build"
    # command: "npm run start"
    volumes:
      - .:/app/
      - /app/node_modules
    ports:
      - "8080:8080"
    links:
      - postgresdb
      - redis
    depends_on:
      - postgresdb
      - redis

  postgresdb:
    container_name: "cemetery-db"
    image: postgres:14.3-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data

  redis:
    image: "redislabs/redismod:latest"
    container_name: "cemetery_redis"
    restart: "always"
    ports:
      - "6379:6379"
    env_file:
      - .env.redis
    volumes:
      - ./.docker/redis/redis-data:/data
    entrypoint: >
      redis-server
      --loadmodule /usr/lib/redis/modules/redisearch.so
      --loadmodule /usr/lib/redis/modules/redisgraph.so
      --loadmodule /usr/lib/redis/modules/redistimeseries.so
      --loadmodule /usr/lib/redis/modules/rejson.so
      --loadmodule /usr/lib/redis/modules/redisbloom.so
      --loadmodule /usr/lib/redis/modules/redisgears.so
    deploy:
      replicas: 1

volumes:
  db:
    driver: local
  redis-data:
    driver: local

networks:
  default:
